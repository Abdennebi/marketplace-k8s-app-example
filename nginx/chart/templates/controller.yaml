apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Values.APP_INSTANCE_NAME }}-controller-sa
  namespace: {{ .Values.NAMESPACE }}
  labels:
    app.kubernetes.io/name: "{{ .Values.APP_INSTANCE_NAME }}"
    app.kubernetes.io/component: controller
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ .Values.APP_INSTANCE_NAME }}-controller-rb
  namespace: {{ .Values.NAMESPACE }}
  labels:
    app.kubernetes.io/name: "{{ .Values.APP_INSTANCE_NAME }}"
    app.kubernetes.io/component: controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: {{ .Values.APP_INSTANCE_NAME }}-controller-sa
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ .Values.APP_INSTANCE_NAME }}-controller
  labels: &ControllerLabels
    app.kubernetes.io/name: "{{ .Values.APP_INSTANCE_NAME }}"
    app.kubernetes.io/component: controller
    app: {{ template "nginx.name" . }}
    chart: {{ template "nginx.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    component: controller
spec:
  replicas: 1
  selector:
    matchLabels: *ControllerLabels
  template:
    metadata:
      labels: *ControllerLabels
    spec:
      serviceAccountName: {{ .Values.APP_INSTANCE_NAME }}-controller-sa
      containers:
      - name: controller
        image: {{ .Values.imageController.image }}:{{ .Values.imageController.tag }}
        imagePullPolicy: {{ .Values.imageController.pullPolicy }}
        env:
        - name: APP_INSTANCE_NAME
          value: "{{ .Values.APP_INSTANCE_NAME }}"
        - name: NAMESPACE
          value: "{{ .Values.NAMESPACE }}"
